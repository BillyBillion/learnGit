初始化仓库：
git init

添加文件： 
git add ./filename.format

提交文件： 
git commit -m "message"

查看工作区状态： 
git status

查看修改内容：
git diff

当前版本
HEAD
前一个版本
HEAD^

将提交到暂存区的修改回退到工作区
git reset HEAD <file>

版本回退/前进
git reset --hard commit_id

提交历史
git log

命令历史【回退之前的版本号】
git reflog


回复最近一次git commit或git add时的状态
git checkout -- filename

从版本库删除文件 
git rm filename

关联本地仓库
git remote add origin git@github.com:BillyBillion/learngit.git

推送到远程【只有第一次需要加-u
git push -u origin master

克隆到本地库
git clone git@github.com:BillyBillion/gitskills.git

查看分支：
git branch

创建分支：
git branch <name>

切换分支：
git checkout <name>

创建+切换分支：
git checkout -b <name>

合并某分支到当前分支：
git merge <name>

--no-ff方式的hebing
git merge --no-ff -m "merge with no-ff" <name>

删除分支：
git branch -d <name>

强行删除未合并的分支
git branch -D <name>

分支合并图
git log --graph

分支合并情况
git log --graph --pretty=oneline --abbrev-commit

指定本地分支dev与远程分支origin/dev的链接
git branch --set-upstream-to=origin/dev dev

存储现场
git stash

查看工作现场
git stash list

恢复工作现场
git stash apply[恢复] + git stash drop[删除]
git stash pop [删除+恢复]

恢复指定现场
git stash apply stash @{0}

查看远程库信息
git remote -v

抓取远程的新提交
git pull

从本地推送分支
git push origin <branch-name>

在本地创建和远程对应的分支
git checkout -b <branch-name> origin/branch-name

建立本地分支与远程分支的关联 
git branch --set-upstream branch-name origin/branch-name

整理未push的分叉提交历史
git rebase

查看所有标签
git tag

查看标签信息
git show tag-name

打新标签
git tag <tag-name>
git tag -a <tag-name> -m "message" commit-id

给历史提交打标签
git tag  tag-name commit-id

[标签总是和commit-id挂钩的]

删除标签
git tag -d tag-name

推送标签到远程
git push origin tag-name

推送所有本地标签
git  push origin --tags

删除远程标签[先删除本地标签]
git push origin :refs/tags/tag-name 




参考文献：
https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000

























